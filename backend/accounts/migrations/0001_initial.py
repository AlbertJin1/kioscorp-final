# Generated by Django 5.1.6 on 2025-03-05 13:01

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255)),
                ('action', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='MainCategory',
            fields=[
                ('main_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('main_category_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='NextCustomerId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_id', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='NextOrderId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_id', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='NextOrderItemId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_id', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='NextProductId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_id', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='NextSubCategoryId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_id', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_image', models.ImageField(upload_to='products/')),
                ('product_name', models.CharField(max_length=255)),
                ('product_type', models.CharField(max_length=255)),
                ('product_size', models.CharField(max_length=255)),
                ('product_brand', models.CharField(max_length=255)),
                ('product_color', models.CharField(max_length=255)),
                ('product_quantity', models.IntegerField(default=0)),
                ('product_description', models.TextField(blank=True, null=True)),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('product_added', models.DateTimeField(auto_now_add=True)),
                ('product_sold', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='VATSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vat_percentage', models.DecimalField(decimal_places=2, default=12.0, max_digits=5)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('phone_number', models.CharField(max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('admin', 'Admin'), ('cashier', 'Cashier')], default='cashier', max_length=10)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='user_profile/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order_date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('order_status', models.CharField(choices=[('Pending', 'Pending'), ('Paid', 'Paid'), ('Void', 'Void')], default='Pending', max_length=10)),
                ('order_paid_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('order_change', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('order_cashier', models.CharField(blank=True, max_length=255, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback_rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('feedback_satisfaction', models.CharField(choices=[('Not Satisfied', 'Not Satisfied'), ('Slightly Satisfied', 'Slightly Satisfied'), ('Neutral', 'Neutral'), ('Satisfied', 'Satisfied'), ('Very Satisfied', 'Very Satisfied')], max_length=50)),
                ('feedback_date', models.DateTimeField(auto_now_add=True)),
                ('order_id', models.ForeignKey(db_column='order_id', on_delete=django.db.models.deletion.CASCADE, to='accounts.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('order_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order_item_quantity', models.IntegerField()),
                ('discounted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.product')),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('sub_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('sub_category_name', models.CharField(max_length=255)),
                ('sub_category_image', models.ImageField(blank=True, null=True, upload_to='subcategories/')),
                ('main_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.maincategory')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='sub_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.subcategory'),
        ),
    ]
